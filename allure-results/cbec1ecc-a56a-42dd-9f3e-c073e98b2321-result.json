{"name": "test_8_cases_649", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#appointment > app-appointment > div > div:nth-child(3) > div > div > app-st-table > div > table > tbody > tr.mat-mdc-row.mdc-data-table__row.cdk-row.example-element-row.cursorPointer.row-element.ng-star-inserted.select-row > td.mat-mdc-cell.mdc-data-table__cell.cdk-cell.cdk-column-appointmentCardNum.mat-column-appointmentCardNum.appointment__row.ng-star-inserted\"}\n  (Session info: chrome=123.0.6312.122); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF77DC67032+63090]\n\t(No symbol) [0x00007FF77DBD2C82]\n\t(No symbol) [0x00007FF77DA6EC65]\n\t(No symbol) [0x00007FF77DAB499D]\n\t(No symbol) [0x00007FF77DAB4ADC]\n\t(No symbol) [0x00007FF77DAF5B37]\n\t(No symbol) [0x00007FF77DAD701F]\n\t(No symbol) [0x00007FF77DAF3412]\n\t(No symbol) [0x00007FF77DAD6D83]\n\t(No symbol) [0x00007FF77DAA83A8]\n\t(No symbol) [0x00007FF77DAA9441]\n\tGetHandleVerifier [0x00007FF77E0625AD+4238317]\n\tGetHandleVerifier [0x00007FF77E09F70D+4488525]\n\tGetHandleVerifier [0x00007FF77E0979EF+4456495]\n\tGetHandleVerifier [0x00007FF77DD40576+953270]\n\t(No symbol) [0x00007FF77DBDE54F]\n\t(No symbol) [0x00007FF77DBD9224]\n\t(No symbol) [0x00007FF77DBD935B]\n\t(No symbol) [0x00007FF77DBC9B94]\n\tBaseThreadInitThunk [0x00007FFEC95D7344+20]\n\tRtlUserThreadStart [0x00007FFEC9C426B1+33]", "trace": "def test_8_cases_649():\n        case_name('Подписание назначения лекарственного препарата из создания назначения')\n        #Перехожу по ссылке в ТАП\n        browser.get(url_TAP)\n        browser.implicitly_wait(20)\n        f = ContractsPage(browser)\n    \n        step('Шаг 1: Нажать кнопку \"Добавить\"')\n        # Кликаю кнопку \"Добавить\" в блоке \"Назначения\"\n        f.click_element( BT_add_purpose)\n        time.sleep(3)\n        if f.enabled(FM_purpose):\n            true_step('ОР: - Открывается форма ввода данных нового назначения')\n        else:\n            false_step('Ошибка: Форма назначения недоступна')\n        if f.enabled(CL_medicament):\n            true_step('    - По умолчанию открывается вкладка \"Лекарственный препарат\"')\n        else:\n            false_step('Ошибка: Не выбрана вкладка \"Лекарственный препарат\" по умолчанию')\n    \n        step('Шаг 2: Заполнить поле препарат для добавления назначения')\n        #Кликаю по полю \"Препарат\"\n        f.click_element(FD_drug)\n        f.send_keys(FD_drug, 'Хлоргексидин, Хлоргексидин, р-р д/наружн. прим., 0.05 %,1000 мл')\n        time.sleep(2)\n        f.click_element(LT)\n        time.sleep(4)\n        OB_form_purpose() #Вызываю функцию проверки обязательных полей формы\n    \n        step('Шаг 3: Нажать кнопку \"Подписать\"')\n        f.click_element(BT_signature_path)\n        time.sleep(10)\n        if f.text(ST_purpose) == 'Подписано':\n            true_step('ОР: - Назначение сохранилось со статусом \"Подписано\"')\n        else:\n            false_step('Ошибка: Статус назначения отображается некорректно')\n    \n        step('Шаг 4: Проверить, что подписанное назначение отображается в списке назначений со статусом \"Подписано\"')\n>       if f.text(ST_purpose_grid) == 'Подписано':\n\nautoTests\\test_TAP.py:468: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nautoTests\\function.py:86: in text\n    text_element = self.browser.find_element(*element)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000146104E7020>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF77DBC9B94]\\\\n\\\\tBaseThreadInitThunk [0x00007FFEC95D7344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFEC9C426B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#appointment > app-appointment > div > div:nth-child(3) > div > div > app-st-table > div > table > tbody > tr.mat-mdc-row.mdc-data-table__row.cdk-row.example-element-row.cursorPointer.row-element.ng-star-inserted.select-row > td.mat-mdc-cell.mdc-data-table__cell.cdk-cell.cdk-column-appointmentCardNum.mat-column-appointmentCardNum.appointment__row.ng-star-inserted\"}\nE         (Session info: chrome=123.0.6312.122); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF77DC67032+63090]\nE       \t(No symbol) [0x00007FF77DBD2C82]\nE       \t(No symbol) [0x00007FF77DA6EC65]\nE       \t(No symbol) [0x00007FF77DAB499D]\nE       \t(No symbol) [0x00007FF77DAB4ADC]\nE       \t(No symbol) [0x00007FF77DAF5B37]\nE       \t(No symbol) [0x00007FF77DAD701F]\nE       \t(No symbol) [0x00007FF77DAF3412]\nE       \t(No symbol) [0x00007FF77DAD6D83]\nE       \t(No symbol) [0x00007FF77DAA83A8]\nE       \t(No symbol) [0x00007FF77DAA9441]\nE       \tGetHandleVerifier [0x00007FF77E0625AD+4238317]\nE       \tGetHandleVerifier [0x00007FF77E09F70D+4488525]\nE       \tGetHandleVerifier [0x00007FF77E0979EF+4456495]\nE       \tGetHandleVerifier [0x00007FF77DD40576+953270]\nE       \t(No symbol) [0x00007FF77DBDE54F]\nE       \t(No symbol) [0x00007FF77DBD9224]\nE       \t(No symbol) [0x00007FF77DBD935B]\nE       \t(No symbol) [0x00007FF77DBC9B94]\nE       \tBaseThreadInitThunk [0x00007FFEC95D7344+20]\nE       \tRtlUserThreadStart [0x00007FFEC9C426B1+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "attachments": [{"name": "stdout", "source": "033d5681-a042-4717-aa44-b444889261f7-attachment.txt", "type": "text/plain"}], "start": 1713519742555, "stop": 1713519784180, "uuid": "ea6c556f-af46-464c-92c9-0147be652379", "historyId": "a2f022e448afa65584888599439a0988", "testCaseId": "a2f022e448afa65584888599439a0988", "fullName": "autoTests.test_TAP#test_8_cases_649", "labels": [{"name": "parentSuite", "value": "autoTests"}, {"name": "suite", "value": "test_TAP"}, {"name": "host", "value": "Arutyun"}, {"name": "thread", "value": "1816-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "autoTests.test_TAP"}]}