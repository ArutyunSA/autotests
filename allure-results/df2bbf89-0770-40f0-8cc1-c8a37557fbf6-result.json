{"name": "test_31_cases_636", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".mat-option-text\"}\n  (Session info: chrome=124.0.6367.61); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF656C71502+60802]\n\t(No symbol) [0x00007FF656BEAC02]\n\t(No symbol) [0x00007FF656AA7CE4]\n\t(No symbol) [0x00007FF656AF6D4D]\n\t(No symbol) [0x00007FF656AF6E1C]\n\t(No symbol) [0x00007FF656B3CE37]\n\t(No symbol) [0x00007FF656B1ABBF]\n\t(No symbol) [0x00007FF656B3A224]\n\t(No symbol) [0x00007FF656B1A923]\n\t(No symbol) [0x00007FF656AE8FEC]\n\t(No symbol) [0x00007FF656AE9C21]\n\tGetHandleVerifier [0x00007FF656F7411D+3217821]\n\tGetHandleVerifier [0x00007FF656FB60B7+3488055]\n\tGetHandleVerifier [0x00007FF656FAF03F+3459263]\n\tGetHandleVerifier [0x00007FF656D2B846+823494]\n\t(No symbol) [0x00007FF656BF5F9F]\n\t(No symbol) [0x00007FF656BF0EC4]\n\t(No symbol) [0x00007FF656BF1052]\n\t(No symbol) [0x00007FF656BE18A4]\n\tBaseThreadInitThunk [0x00007FFE0AB37344+20]\n\tRtlUserThreadStart [0x00007FFE0C0426B1+33]", "trace": "@pytest.mark.regress_tap\n    def test_31_cases_636():\n        case_name('Проверка поля \"Льгота\" при выписке рецепта для пациента с одной льготой')\n    \n        step('Шаг 1: Выбрать назначение из списка или создать новое')\n        # Перехожу по ссылке в ТАП\n        browser.get(url_1Lgot_TAP)\n        browser.implicitly_wait(20)\n        f = ContractsPage(browser)\n        time.sleep(4)\n        # Кликаю кнопку \"Добавить\" в блоке \"Назначения\"\n        f.click_element(BT_add_purpose)\n        time.sleep(4)\n        # Кликаю по полю \"Препарат\"\n        f.click_element(FD_drug)\n        # Ввожу в поле название препарата\n        f.send_keys(FD_drug, 'Хлоргексидин, Хлоргексидин, р-р д/наружн. прим., 0.05 %,1000 мл')\n        time.sleep(1)\n        # Выбираю и кликаю по первому элементу выпадающего списка поля \"Препарат\"\n>       f.click_element(LT)\n\nautotest\\tests\\test_TAP.py:2154: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nautotest\\tests\\config\\function.py:17: in click_element\n    self.browser.find_element(*element).click()\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000025E833D12B0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF656BE18A4]\\\\n\\\\tBaseThreadInitThunk [0x00007FFE0AB37344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFE0C0426B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".mat-option-text\"}\nE         (Session info: chrome=124.0.6367.61); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF656C71502+60802]\nE       \t(No symbol) [0x00007FF656BEAC02]\nE       \t(No symbol) [0x00007FF656AA7CE4]\nE       \t(No symbol) [0x00007FF656AF6D4D]\nE       \t(No symbol) [0x00007FF656AF6E1C]\nE       \t(No symbol) [0x00007FF656B3CE37]\nE       \t(No symbol) [0x00007FF656B1ABBF]\nE       \t(No symbol) [0x00007FF656B3A224]\nE       \t(No symbol) [0x00007FF656B1A923]\nE       \t(No symbol) [0x00007FF656AE8FEC]\nE       \t(No symbol) [0x00007FF656AE9C21]\nE       \tGetHandleVerifier [0x00007FF656F7411D+3217821]\nE       \tGetHandleVerifier [0x00007FF656FB60B7+3488055]\nE       \tGetHandleVerifier [0x00007FF656FAF03F+3459263]\nE       \tGetHandleVerifier [0x00007FF656D2B846+823494]\nE       \t(No symbol) [0x00007FF656BF5F9F]\nE       \t(No symbol) [0x00007FF656BF0EC4]\nE       \t(No symbol) [0x00007FF656BF1052]\nE       \t(No symbol) [0x00007FF656BE18A4]\nE       \tBaseThreadInitThunk [0x00007FFE0AB37344+20]\nE       \tRtlUserThreadStart [0x00007FFE0C0426B1+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "attachments": [{"name": "stdout", "source": "aad3844f-20f8-4918-bd75-709469397b5e-attachment.txt", "type": "text/plain"}], "start": 1714132949766, "stop": 1714132981037, "uuid": "0a2892cd-854c-4be4-844a-b3da0e2a5726", "historyId": "9f013db4ebd7ff8a905e0698878c6585", "testCaseId": "9f013db4ebd7ff8a905e0698878c6585", "fullName": "autotest.tests.test_TAP#test_31_cases_636", "labels": [{"name": "tag", "value": "regress_tap"}, {"name": "parentSuite", "value": "autotest.tests"}, {"name": "suite", "value": "test_TAP"}, {"name": "host", "value": "Arutyun"}, {"name": "thread", "value": "14064-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "autotest.tests.test_TAP"}]}